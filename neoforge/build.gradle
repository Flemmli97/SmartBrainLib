plugins {
    id 'ml-platform-config'
    id 'net.neoforged.gradle.userdev' version '7.0.190'
    id 'net.darkhax.curseforgegradle' version '1.1.26'
    id 'com.modrinth.minotaur' version '2.8.7'
}

def accessTransformersFile = file('src/main/resources/META-INF/accesstransformer.cfg')

if (accessTransformersFile.exists())
    minecraft.accessTransformers.file accessTransformersFile

subsystems {
    parchment {
        minecraftVersion = project.mappings_mc_version
        mappingsVersion = project.mappings_version
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id

        modSources {
            add(project.sourceSets.getByName("main"))
        }
    }

    client {}

    server {
        programArgument '--nogui'
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    implementation "net.neoforged:neoforge:${neoforge_version}"
}

processResources {
    exclude '**/*.accesswidener'
}

task publishToCurseForge(type:  net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    group = "publishing"
    apiToken = System.getenv("CURSEFORGE_TOKEN") ?: "Invalid/No API Token Found"

    def mainFile = upload(661293, jar)
    mainFile.releaseType = "release"
    mainFile.addModLoader("NeoForge")
    mainFile.addGameVersion(minecraft_version)
    mainFile.addJavaVersion("Java 21")
    mainFile.changelog = "${changelog_url}"
    mainFile.displayName = "${project.mod_name} NeoForge ${project.minecraft_version}-${project.version}"

    //https://github.com/Darkhax/CurseForgeGradle#available-properties
}

modrinth {
    token = System.getenv("modrinthKey")
    projectId = mod_id
    versionNumber = project.version
    versionType = "release"
    uploadFile = jar
    gameVersions = ["${project.minecraft_version}"]
    loaders = ["neoforge"]
}